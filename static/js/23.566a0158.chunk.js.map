{"version":3,"file":"static/js/23.566a0158.chunk.js","mappings":"qTAeMA,EAAcC,EAAAA,MAAW,kBAAM,yCAE/BC,EAAcD,EAAAA,MAAW,WAC7B,IAAME,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBC,GAASF,EAAAA,EAAAA,IAAYG,EAAAA,IACrBC,GAASJ,EAAAA,EAAAA,IAAYK,EAAAA,IAC3B,GAAwBC,EAAAA,EAAAA,UAAS,GAAjC,eACA,GADA,WACqCC,EAAAA,EAAAA,kBAArC,yBAaA,OACE,UAAC,IAAD,YACE,SAAC,KAAD,KACA,SAAC,IAAD,IAMCR,EAeEG,QAAO,SAACM,GACP,OAAKN,GAGEM,EAAQC,KAAKC,cAAcC,WAAWT,EAAOQ,kBAGrDR,QAAO,SAACM,GACP,IAAKJ,GAAqB,QAAXA,EAAkB,OAAO,EACxC,IAAMQ,EAAaJ,EAAQJ,OAC3B,OAAOA,IAAWQ,KAGnBC,KAAI,SAACL,EAASM,GACb,OACE,SAAC,KAAD,CAEEC,GAAE,WAAMP,EAAQC,KAAKO,WAAW,KAAM,MACtCC,MAAO,CACLC,eAAgB,OAChBC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,OAAQ,SARZ,UAWE,SAAC,EAAAC,SAAD,CAAUC,UAAU,SAACC,EAAD,IAApB,UACE,SAAC7B,EAAD,CAAaY,QAASA,GAAcA,EAAQkB,gBAXzCZ,YAqBnB,YAEA,IAAMW,EAAiB,WACrB,OAAO,SAACE,EAAD,+BAGHA,EAAYC,EAAAA,GAAAA,EAAH,4EACJ,qBAAGC,MAAkBC","sources":["components/CountryGrid.tsx"],"sourcesContent":["import React, {\r\n  Suspense,\r\n  useState,\r\n  useEffect,\r\n  useCallback,\r\n  useTransition,\r\n} from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { Link, useSearchParams } from \"react-router-dom\";\r\nimport { selectCountries } from \"../features/countries/countriesSlice\";\r\nimport { CountryGridContainer } from \"../css/CountryGridStyles\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport DropDown from \"./DropDown\";\r\nimport { selectFilter, selectRegion } from \"../features/filters/filtersSlice\";\r\nconst CountryCard = React.lazy(() => import(\"./CountryCard\"));\r\n\r\nconst CountryGrid = React.memo(() => {\r\n  const countries = useSelector(selectCountries);\r\n  const filter = useSelector(selectFilter);\r\n  const region = useSelector(selectRegion);\r\n  const [page, setPage] = useState(0);\r\n  const [isPending, startTransition] = useTransition();\r\n\r\n  // const handleObserver = useCallback((entries) => {\r\n  //   const target = entries[0];\r\n  //   if (target.isIntersecting) {\r\n  //     setPage((prev) => prev + 1);\r\n  //     k;\r\n  //     startTransition(() => {\r\n  //       setShouldFetchImages(true);\r\n  //     });\r\n  //   }\r\n  // }, []);\r\n\r\n  return (\r\n    <CountryGridContainer>\r\n      <SearchBar />\r\n      <DropDown />\r\n\r\n      {/* The commented out filters are for profiling purposes. Trying to\r\n       increase filter and render speed */}\r\n\r\n      {/* <Suspense fallback={<h1>Loading Countries</h1>}> */}\r\n      {countries\r\n        // .filter((country: { name: string }) => {\r\n        //   const filter = searchParams.get(\"filter\");\r\n        //   if (!filter) return true;\r\n        //   const name = country.name.toLowerCase();\r\n        //   return name.startsWith(filter.toLowerCase());\r\n        // })\r\n\r\n        // .filter((country) => {\r\n        //   const region = searchParams.get(\"region\");\r\n        //   if (!region || region === \"All\") return true;\r\n        //   const regionName = country.region;\r\n        //   return region === regionName;\r\n        // })\r\n\r\n        .filter((country: { name: string }) => {\r\n          if (!filter) {\r\n            return true;\r\n          }\r\n          return country.name.toLowerCase().startsWith(filter.toLowerCase());\r\n        })\r\n\r\n        .filter((country) => {\r\n          if (!region || region === \"All\") return true;\r\n          const regionName = country.region;\r\n          return region === regionName;\r\n        })\r\n\r\n        .map((country, index: number) => {\r\n          return (\r\n            <Link\r\n              key={index}\r\n              to={`/${country.name.replaceAll(/ /g, \"-\")}`}\r\n              style={{\r\n                textDecoration: \"none\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                height: \"375px\",\r\n              }}\r\n            >\r\n              <Suspense fallback={<CountryLoading />}>\r\n                <CountryCard country={country} key={country.numericCode} />\r\n              </Suspense>\r\n            </Link>\r\n          );\r\n        })}\r\n      {/* </Suspense> */}\r\n    </CountryGridContainer>\r\n  );\r\n});\r\n\r\nexport default CountryGrid;\r\n\r\nconst CountryLoading = () => {\r\n  return <LoadStyle>Loading Country</LoadStyle>;\r\n};\r\n\r\nconst LoadStyle = styled.p`\r\n  color: ${({ theme }) => theme.text};\r\n  filter: drop-shadow(3px 3px 3px);\r\n`;\r\n"],"names":["CountryCard","React","CountryGrid","countries","useSelector","selectCountries","filter","selectFilter","region","selectRegion","useState","useTransition","country","name","toLowerCase","startsWith","regionName","map","index","to","replaceAll","style","textDecoration","display","justifyContent","alignItems","height","Suspense","fallback","CountryLoading","numericCode","LoadStyle","styled","theme","text"],"sourceRoot":""}