{"version":3,"file":"static/js/178.94fbb1e7.chunk.js","mappings":"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","sources":["css/CountryGridStyles.js","components/SearchBar.tsx","components/DropDown.tsx","components/CountryGrid.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const CountryGridContainer = styled.div`\r\n  box-sizing: border-box;\r\n  margin-top: 15px;\r\n  display: grid;\r\n  gap: 30px;\r\n  text-decoration: none;\r\n  grid-template: 50px 100px 1fr/ 1fr;\r\n  align-items: start;\r\n\r\n  /* align-content: center; */\r\n\r\n  @media (min-width: 600px) {\r\n    grid-template: 100px repeat(3, 1fr) / repeat(2, 250px);\r\n    gap: 50px;\r\n    margin-top: 100px;\r\n    justify-content: center;\r\n  }\r\n\r\n  @media (min-width: 900px) {\r\n    grid-template: 100px repeat(3, 1fr) / repeat(3, 250px);\r\n  }\r\n\r\n  @media (min-width: 1200px) {\r\n    width: 100%;\r\n    max-width: 100vw;\r\n\r\n    grid-template: 100px / repeat(4, 250px);\r\n    /* margin-left: 220px; */\r\n    /* margin-right: 220px; */\r\n  }\r\n`;\r\n","import React, { useCallback, startTransition, useTransition } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport IonIcon from \"@reacticons/ionicons\";\r\nimport styled from \"styled-components\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { useAppDispatch } from \"../features/app/hooks\";\r\nimport {\r\n  setFilter,\r\n  selectFilter,\r\n  selectRegion,\r\n} from \"../features/filters/filtersSlice\";\r\n\r\nexport const InputContainer = styled.div`\r\n  cursor: pointer;\r\n  box-sizing: border-box;\r\n  background: ${({ theme }) => theme.background};\r\n  color: ${({ theme }) => theme.text};\r\n  border-radius: 6px;\r\n  height: 50px;\r\n  width: 90%;\r\n  margin-top: 15px;\r\n  margin-left: 5%;\r\n  margin-right: 5%;\r\n  padding: 10px;\r\n  z-index: 10;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-self: start;\r\n  align-items: center;\r\n  justify-self: center;\r\n  grid-area: 1 / 1 / 2 / 2;\r\n  filter: drop-shadow(3px 3px 3px ${({ theme }) => theme.shadow});\r\n\r\n  @media (min-width: 600px) {\r\n    width: 100%;\r\n    margin: 0;\r\n    grid-area: 1 / 1 / 2 / 2;\r\n    justify-self: flex-start;\r\n  }\r\n\r\n  @media (min-width: 900px) {\r\n    grid-area: 1 / 1 / 2 / 3;\r\n    width: 100%;\r\n  }\r\n\r\n  @media (min-width: 1200px) {\r\n    grid-area: 1 / 1 / 2 / 3;\r\n    width: 350px;\r\n    padding-left: 10px;\r\n    align-self: start;\r\n    justify-self: start;\r\n    margin-left: 0;\r\n    margin-top: 0;\r\n  }\r\n`;\r\n\r\nexport const Input = styled.input.attrs({\r\n  type: \"text\",\r\n  placeholder: \"Search for a country...\",\r\n})`\r\n  background-color: transparent;\r\n  border: none;\r\n  outline: none;\r\n  color: ${({ theme }) => theme.text};\r\n  margin-left: 10px;\r\n  height: 40px;\r\n  font-size: 20px;\r\n  &::placeholder {\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n\r\n  @media (min-width: 370px) {\r\n    margin-left: 20px;\r\n  }\r\n`;\r\n\r\nexport const SearchFilterContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin: 50px;\r\n  width: 300px;\r\n`;\r\n\r\nconst SearchBar = React.memo(() => {\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const filter = useSelector(selectFilter);\r\n  const region = useSelector(selectRegion);\r\n  const dispatch = useAppDispatch();\r\n  const [isPending, startTransition] = useTransition();\r\n\r\n  const handleChange = useCallback((event: any) => {\r\n    startTransition(() => {\r\n      const inputText = event.target.value;\r\n      dispatch(setFilter(inputText));\r\n      // setSearchParams({ region: region, filter: inputText });\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <InputContainer>\r\n      <IonIcon name=\"search-circle-outline\" size=\"large\"></IonIcon>\r\n      <Input value={filter} onChange={handleChange} />\r\n    </InputContainer>\r\n  );\r\n});\r\n\r\nexport default SearchBar;\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport IonIcon from \"@reacticons/ionicons\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { useAppDispatch } from \"../features/app/hooks\";\r\nimport {\r\n  setFilter,\r\n  setRegion,\r\n  selectFilter,\r\n  selectRegion,\r\n} from \"../features/filters/filtersSlice\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Main = styled(\"div\")`\r\n  align-self: start;\r\n  box-sizing: border-box;\r\n  background: transparent;\r\n  height: 50px;\r\n  z-index: 10;\r\n  grid-area: 2 / 1 / 3 / 2;\r\n  width: 35%;\r\n  cursor: pointer;\r\n  filter: drop-shadow(3px 3px 3px ${({ theme }) => theme.shadow});\r\n  margin: 20px 5%;\r\n  margin-bottom: 30px;\r\n\r\n  @media (min-width: 600px) {\r\n    grid-area: 1 / 2 / 2 / 3;\r\n    justify-self: start;\r\n    margin: 0;\r\n  }\r\n\r\n  @media (min-width: 900px) {\r\n    grid-area: 1 / 3 / 2 / 4;\r\n  }\r\n\r\n  @media (min-width: 1200px) {\r\n    justify-self: end;\r\n    grid-area: 1 / 3 / 2 / 5;\r\n    margin: 0;\r\n    width: 250px;\r\n  }\r\n`;\r\n\r\nconst DropDownContainer = styled(\"div\")`\r\n  width: 250px;\r\n  margin: 0 auto;\r\n  z-index: 10;\r\n`;\r\n\r\nconst DropDownHeader = styled.div.attrs({\r\n  tabIndex: 0,\r\n})`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  box-sizing: border-box;\r\n  height: 50px;\r\n  padding: 20px;\r\n  font-weight: 600;\r\n  font-size: 1.2rem;\r\n  color: ${({ theme }) => theme.text};\r\n  border-radius: 6px;\r\n  filter: drop-shadow(2px 2px 2px ${({ theme }) => theme.shadow});\r\n  color: ${({ theme }) => theme.text};\r\n  background-color: ${({ theme }) => theme.background};\r\n`;\r\n\r\nconst DropDownListContainer = styled(\"div\")``;\r\n\r\nconst DropDownList = styled(\"ul\")`\r\n  padding: 0;\r\n  margin: 0;\r\n  background-color: ${({ theme }) => theme.background};\r\n  /* padding-bottom: 5px; */\r\n  box-sizing: border-box;\r\n  border-radius: 4px;\r\n  color: ${({ theme }) => theme.text};\r\n  font-size: 1.2rem;\r\n  font-weight: 600;\r\n\r\n  &:first-child {\r\n    padding-top: 0.8em;\r\n  }\r\n`;\r\n\r\nconst ListItem = styled.li`\r\n  list-style: none;\r\n  height: 100%;\r\n  width: 100%;\r\n  padding-top: 0.4em;\r\n  padding-bottom: 0.4em;\r\n  cursor: pointer;\r\n  background-color: ${({ theme }) => theme.background};\r\n  &:hover {\r\n    filter: brightness(80%);\r\n  }\r\n`;\r\n\r\nconst ItemButton = styled.button`\r\n  height: 100%;\r\n  width: 100%;\r\n  background-color: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  color: ${({ theme }) => theme.text};\r\n`;\r\n\r\nconst options = [\"All\", \"Africa\", \"Americas\", \"Asia\", \"Europe\", \"Oceania\"];\r\n\r\nconst DropDown = React.memo(() => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const region = useSelector(selectRegion);\r\n  const filter = useSelector(selectFilter);\r\n  const dispatch = useAppDispatch();\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  console.log(filter);\r\n\r\n  const toggling = () => setIsOpen(!isOpen);\r\n\r\n  const togglingButton = (e: React.KeyboardEvent) => {\r\n    if (e.charCode === 13 || e.keyCode === 13) {\r\n      setIsOpen(!isOpen);\r\n    }\r\n\r\n    if (e.charCode === 27 || e.keyCode === 27) {\r\n      setIsOpen(false);\r\n    }\r\n  };\r\n\r\n  const onOptionClicked = (regionOption: string) => () => {\r\n    dispatch(setRegion(regionOption));\r\n    setIsOpen(false);\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   setSearchParams({ region, filter });\r\n  // }, [region, filter]);\r\n\r\n  return (\r\n    <Main>\r\n      <DropDownContainer>\r\n        <DropDownHeader onClick={toggling} onKeyPress={togglingButton}>\r\n          {region || \"Filter by Region\"}\r\n          <IonIcon name=\"chevron-down-outline\"></IonIcon>\r\n        </DropDownHeader>\r\n        {isOpen && (\r\n          <DropDownListContainer>\r\n            <DropDownList>\r\n              {options.map((option, index) => (\r\n                <ListItem key={index}>\r\n                  <ItemButton onClick={onOptionClicked(option)} key={index}>\r\n                    {option}\r\n                  </ItemButton>\r\n                </ListItem>\r\n              ))}\r\n            </DropDownList>\r\n          </DropDownListContainer>\r\n        )}\r\n      </DropDownContainer>\r\n    </Main>\r\n  );\r\n});\r\n\r\nexport default DropDown;\r\n","import React, {\r\n  Suspense,\r\n  useState,\r\n  useEffect,\r\n  useCallback,\r\n  useTransition,\r\n} from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { Link, useSearchParams } from \"react-router-dom\";\r\nimport { selectCountries } from \"../features/countries/countriesSlice\";\r\nimport { CountryGridContainer } from \"../css/CountryGridStyles\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport DropDown from \"./DropDown\";\r\nimport { selectFilter, selectRegion } from \"../features/filters/filtersSlice\";\r\nconst CountryCard = React.lazy(() => import(\"./CountryCard\"));\r\n\r\nconst CountryGrid = React.memo(() => {\r\n  const countries = useSelector(selectCountries);\r\n  const filter = useSelector(selectFilter);\r\n  const region = useSelector(selectRegion);\r\n  const [page, setPage] = useState(0);\r\n  const [isPending, startTransition] = useTransition();\r\n\r\n  // const handleObserver = useCallback((entries) => {\r\n  //   const target = entries[0];\r\n  //   if (target.isIntersecting) {\r\n  //     setPage((prev) => prev + 1);\r\n  //     k;\r\n  //     startTransition(() => {\r\n  //       setShouldFetchImages(true);\r\n  //     });\r\n  //   }\r\n  // }, []);\r\n\r\n  return (\r\n    <CountryGridContainer>\r\n      <SearchBar />\r\n      <DropDown />\r\n\r\n      {/* The commented out filters are for profiling purposes. Trying to\r\n       increase filter and render speed */}\r\n\r\n      {/* <Suspense fallback={<h1>Loading Countries</h1>}> */}\r\n      {countries\r\n        // .filter((country: { name: string }) => {\r\n        //   const filter = searchParams.get(\"filter\");\r\n        //   if (!filter) return true;\r\n        //   const name = country.name.toLowerCase();\r\n        //   return name.startsWith(filter.toLowerCase());\r\n        // })\r\n\r\n        // .filter((country) => {\r\n        //   const region = searchParams.get(\"region\");\r\n        //   if (!region || region === \"All\") return true;\r\n        //   const regionName = country.region;\r\n        //   return region === regionName;\r\n        // })\r\n\r\n        .filter((country: { name: string }) => {\r\n          if (!filter) {\r\n            return true;\r\n          }\r\n          return country.name.toLowerCase().startsWith(filter.toLowerCase());\r\n        })\r\n\r\n        .filter((country) => {\r\n          if (!region || region === \"All\") return true;\r\n          const regionName = country.region;\r\n          return region === regionName;\r\n        })\r\n\r\n        .map((country, index: number) => {\r\n          return (\r\n            <Link\r\n              key={index}\r\n              to={`/${country.name.replaceAll(/ /g, \"-\")}`}\r\n              style={{\r\n                textDecoration: \"none\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                height: \"375px\",\r\n              }}\r\n            >\r\n              <Suspense fallback={<CountryLoading />}>\r\n                <CountryCard country={country} key={country.numericCode} />\r\n              </Suspense>\r\n            </Link>\r\n          );\r\n        })}\r\n      {/* </Suspense> */}\r\n    </CountryGridContainer>\r\n  );\r\n});\r\n\r\nexport default CountryGrid;\r\n\r\nconst CountryLoading = () => {\r\n  return <LoadStyle>Loading Country</LoadStyle>;\r\n};\r\n\r\nconst LoadStyle = styled.p`\r\n  color: ${({ theme }) => theme.text};\r\n  filter: drop-shadow(3px 3px 3px);\r\n`;\r\n"],"names":["CountryGridContainer","styled","InputContainer","theme","background","text","shadow","Input","type","placeholder","React","useSearchParams","filter","useSelector","selectFilter","dispatch","selectRegion","useAppDispatch","useTransition","startTransition","handleChange","useCallback","event","inputText","target","value","setFilter","name","size","onChange","Main","DropDownContainer","DropDownHeader","tabIndex","DropDownListContainer","DropDownList","ListItem","ItemButton","options","useState","isOpen","setIsOpen","region","console","log","onClick","onKeyPress","e","charCode","keyCode","map","option","index","regionOption","setRegion","CountryCard","countries","selectCountries","country","toLowerCase","startsWith","regionName","to","replaceAll","style","textDecoration","display","justifyContent","alignItems","height","Suspense","fallback","CountryLoading","numericCode","LoadStyle"],"sourceRoot":""}